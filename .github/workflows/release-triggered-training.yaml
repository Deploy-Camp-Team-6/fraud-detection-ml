# .github/workflows/release-triggered-training.yaml

name: 'Trigger Model Training on Release'

on:
  release:
    types: [created]

jobs:
  train-and-register-model:
    runs-on: ubuntu-latest
    
    env:
      MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
      AWS_ACCESS_KEY_ID: ${{ secrets.MINIO_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.MINIO_SECRET_KEY }}
      MLFLOW_S3_ENDPOINT_URL: ${{ secrets.MINIO_ENDPOINT_URL }}

    steps:
      - name: '‚úÖ Checkout Repository'
        uses: actions/checkout@v4

      - name: 'üêç Set up Python 3.10'
        # ... (this part remains the same) ...
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: 'üì¶ Install Dependencies'
        # ... (this part remains the same) ...
        run: |
          pip install poetry
          poetry install --no-root --no-dev
      
      - name: 'üíæ Configure DVC and Pull Data'
        # ... (this part remains the same) ...
        run: |
          pip install dvc[s3]
          dvc remote add -d minio s3://fraud-detection/dvc-storage
          dvc remote modify minio endpointurl ${{ secrets.MINIO_ENDPOINT_URL }}
          dvc remote modify minio access_key_id ${{ secrets.MINIO_ACCESS_KEY_ID }}
          dvc remote modify minio secret_access_key ${{ secrets.MINIO_SECRET_KEY }}
          dvc pull --force

      - name: 'üöÄ Run Model Training Pipeline'
        # ‚≠ê THIS IS THE UPDATED STEP ‚≠ê
        # It dynamically extracts the model name from the release tag.
        run: |
          # 1. Check if the tag format is correct (contains a '/')
          if [[ "${{ github.ref_name }}" != */* ]]; then
            echo "Error: Release tag '${{ github.ref_name }}' is not in the required 'model-name/version' format."
            exit 1
          fi

          # 2. Extract the model name (the part before the '/')
          MODEL_NAME=$(echo "${{ github.ref_name }}" | cut -d'/' -f1)
          echo "Extracted model name: $MODEL_NAME"

          # 3. Run the training script with the dynamic model name
          poetry run python src/pipeline/training_pipeline.py --model "$MODEL_NAME"
          
      - name: 'üéâ Training Complete'
        run: echo "Model training and registration complete. Check your MLflow UI."